"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-device-pixel-ratio";
exports.ids = ["vendor-chunks/use-device-pixel-ratio"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-device-pixel-ratio/dist/index.module.js":
/*!******************************************************************!*\
  !*** ./node_modules/use-device-pixel-ratio/dist/index.module.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDevicePixelRatio: () => (/* binding */ getDevicePixelRatio),\n/* harmony export */   useDevicePixelRatio: () => (/* binding */ useDevicePixelRatio)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\r\n * Get the device pixel ratio, potentially rounded and capped.\r\n * Will emit new values if it changes.\r\n *\r\n * @param options\r\n * @returns The current device pixel ratio, or the default if none can be resolved\r\n */ function useDevicePixelRatio(options) {\n    const dpr = getDevicePixelRatio(options);\n    const [currentDpr, setCurrentDpr] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(dpr);\n    const { defaultDpr, maxDpr, round } = options || {};\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const canListen =  false && 0;\n        if (!canListen) {\n            return;\n        }\n        const updateDpr = ()=>setCurrentDpr(getDevicePixelRatio({\n                defaultDpr,\n                maxDpr,\n                round\n            }));\n        const mediaMatcher = window.matchMedia(`screen and (resolution: ${currentDpr}dppx)`); // Safari 13.1 does not have `addEventListener`, but does have `addListener`\n        if (mediaMatcher.addEventListener) {\n            mediaMatcher.addEventListener(\"change\", updateDpr);\n        } else {\n            mediaMatcher.addListener(updateDpr);\n        }\n        return ()=>{\n            if (mediaMatcher.removeEventListener) {\n                mediaMatcher.removeEventListener(\"change\", updateDpr);\n            } else {\n                mediaMatcher.removeListener(updateDpr);\n            }\n        };\n    }, [\n        currentDpr,\n        defaultDpr,\n        maxDpr,\n        round\n    ]);\n    return currentDpr;\n}\n/**\r\n * Returns the current device pixel ratio (DPR) given the passed options\r\n *\r\n * @param options\r\n * @returns current device pixel ratio\r\n */ function getDevicePixelRatio(options) {\n    const { defaultDpr = 1, maxDpr = 3, round = true } = options || {};\n    const hasDprProp =  false && 0;\n    const dpr = hasDprProp ? window.devicePixelRatio : defaultDpr;\n    const rounded = Math.min(Math.max(1, round ? Math.floor(dpr) : dpr), maxDpr);\n    return rounded;\n}\n //# sourceMappingURL=index.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLWRldmljZS1waXhlbC1yYXRpby9kaXN0L2luZGV4Lm1vZHVsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBRTVDOzs7Ozs7Q0FNQyxHQUVELFNBQVNFLG9CQUFvQkMsT0FBTztJQUNsQyxNQUFNQyxNQUFNQyxvQkFBb0JGO0lBQ2hDLE1BQU0sQ0FBQ0csWUFBWUMsY0FBYyxHQUFHUCwrQ0FBUUEsQ0FBQ0k7SUFDN0MsTUFBTSxFQUNKSSxVQUFVLEVBQ1ZDLE1BQU0sRUFDTkMsS0FBSyxFQUNOLEdBQUdQLFdBQVcsQ0FBQztJQUNoQkYsZ0RBQVNBLENBQUM7UUFDUixNQUFNVSxZQUFZLE1BQWtCLElBQWUsQ0FBc0JDO1FBRXpFLElBQUksQ0FBQ0QsV0FBVztZQUNkO1FBQ0Y7UUFFQSxNQUFNRSxZQUFZLElBQU1OLGNBQWNGLG9CQUFvQjtnQkFDeERHO2dCQUNBQztnQkFDQUM7WUFDRjtRQUVBLE1BQU1JLGVBQWVGLE9BQU9HLFVBQVUsQ0FBQyxDQUFDLHdCQUF3QixFQUFFVCxXQUFXLEtBQUssQ0FBQyxHQUFHLDRFQUE0RTtRQUVsSyxJQUFJUSxhQUFhRSxnQkFBZ0IsRUFBRTtZQUNqQ0YsYUFBYUUsZ0JBQWdCLENBQUMsVUFBVUg7UUFDMUMsT0FBTztZQUNMQyxhQUFhRyxXQUFXLENBQUNKO1FBQzNCO1FBRUEsT0FBTztZQUNMLElBQUlDLGFBQWFJLG1CQUFtQixFQUFFO2dCQUNwQ0osYUFBYUksbUJBQW1CLENBQUMsVUFBVUw7WUFDN0MsT0FBTztnQkFDTEMsYUFBYUssY0FBYyxDQUFDTjtZQUM5QjtRQUNGO0lBQ0YsR0FBRztRQUFDUDtRQUFZRTtRQUFZQztRQUFRQztLQUFNO0lBQzFDLE9BQU9KO0FBQ1Q7QUFDQTs7Ozs7Q0FLQyxHQUVELFNBQVNELG9CQUFvQkYsT0FBTztJQUNsQyxNQUFNLEVBQ0pLLGFBQWEsQ0FBQyxFQUNkQyxTQUFTLENBQUMsRUFDVkMsUUFBUSxJQUFJLEVBQ2IsR0FBR1AsV0FBVyxDQUFDO0lBQ2hCLE1BQU1pQixhQUFhLE1BQWtCLElBQWUsQ0FBbUM7SUFDdkYsTUFBTWhCLE1BQU1nQixhQUFhUixPQUFPUyxnQkFBZ0IsR0FBR2I7SUFDbkQsTUFBTWMsVUFBVUMsS0FBS0MsR0FBRyxDQUFDRCxLQUFLRSxHQUFHLENBQUMsR0FBR2YsUUFBUWEsS0FBS0csS0FBSyxDQUFDdEIsT0FBT0EsTUFBTUs7SUFDckUsT0FBT2E7QUFDVDtBQUVvRCxDQUNwRCx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXlsb2FkLXBsYXlncm91bmQvLi9ub2RlX21vZHVsZXMvdXNlLWRldmljZS1waXhlbC1yYXRpby9kaXN0L2luZGV4Lm1vZHVsZS5qcz9kY2ZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxyXG4gKiBHZXQgdGhlIGRldmljZSBwaXhlbCByYXRpbywgcG90ZW50aWFsbHkgcm91bmRlZCBhbmQgY2FwcGVkLlxyXG4gKiBXaWxsIGVtaXQgbmV3IHZhbHVlcyBpZiBpdCBjaGFuZ2VzLlxyXG4gKlxyXG4gKiBAcGFyYW0gb3B0aW9uc1xyXG4gKiBAcmV0dXJucyBUaGUgY3VycmVudCBkZXZpY2UgcGl4ZWwgcmF0aW8sIG9yIHRoZSBkZWZhdWx0IGlmIG5vbmUgY2FuIGJlIHJlc29sdmVkXHJcbiAqL1xuXG5mdW5jdGlvbiB1c2VEZXZpY2VQaXhlbFJhdGlvKG9wdGlvbnMpIHtcbiAgY29uc3QgZHByID0gZ2V0RGV2aWNlUGl4ZWxSYXRpbyhvcHRpb25zKTtcbiAgY29uc3QgW2N1cnJlbnREcHIsIHNldEN1cnJlbnREcHJdID0gdXNlU3RhdGUoZHByKTtcbiAgY29uc3Qge1xuICAgIGRlZmF1bHREcHIsXG4gICAgbWF4RHByLFxuICAgIHJvdW5kXG4gIH0gPSBvcHRpb25zIHx8IHt9O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNhbkxpc3RlbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdtYXRjaE1lZGlhJyBpbiB3aW5kb3c7XG5cbiAgICBpZiAoIWNhbkxpc3Rlbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHVwZGF0ZURwciA9ICgpID0+IHNldEN1cnJlbnREcHIoZ2V0RGV2aWNlUGl4ZWxSYXRpbyh7XG4gICAgICBkZWZhdWx0RHByLFxuICAgICAgbWF4RHByLFxuICAgICAgcm91bmRcbiAgICB9KSk7XG5cbiAgICBjb25zdCBtZWRpYU1hdGNoZXIgPSB3aW5kb3cubWF0Y2hNZWRpYShgc2NyZWVuIGFuZCAocmVzb2x1dGlvbjogJHtjdXJyZW50RHByfWRwcHgpYCk7IC8vIFNhZmFyaSAxMy4xIGRvZXMgbm90IGhhdmUgYGFkZEV2ZW50TGlzdGVuZXJgLCBidXQgZG9lcyBoYXZlIGBhZGRMaXN0ZW5lcmBcblxuICAgIGlmIChtZWRpYU1hdGNoZXIuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgbWVkaWFNYXRjaGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHVwZGF0ZURwcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1lZGlhTWF0Y2hlci5hZGRMaXN0ZW5lcih1cGRhdGVEcHIpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAobWVkaWFNYXRjaGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgbWVkaWFNYXRjaGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHVwZGF0ZURwcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZWRpYU1hdGNoZXIucmVtb3ZlTGlzdGVuZXIodXBkYXRlRHByKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbY3VycmVudERwciwgZGVmYXVsdERwciwgbWF4RHByLCByb3VuZF0pO1xuICByZXR1cm4gY3VycmVudERwcjtcbn1cbi8qKlxyXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50IGRldmljZSBwaXhlbCByYXRpbyAoRFBSKSBnaXZlbiB0aGUgcGFzc2VkIG9wdGlvbnNcclxuICpcclxuICogQHBhcmFtIG9wdGlvbnNcclxuICogQHJldHVybnMgY3VycmVudCBkZXZpY2UgcGl4ZWwgcmF0aW9cclxuICovXG5cbmZ1bmN0aW9uIGdldERldmljZVBpeGVsUmF0aW8ob3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgZGVmYXVsdERwciA9IDEsXG4gICAgbWF4RHByID0gMyxcbiAgICByb3VuZCA9IHRydWVcbiAgfSA9IG9wdGlvbnMgfHwge307XG4gIGNvbnN0IGhhc0RwclByb3AgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRldmljZVBpeGVsUmF0aW8gPT09ICdudW1iZXInO1xuICBjb25zdCBkcHIgPSBoYXNEcHJQcm9wID8gd2luZG93LmRldmljZVBpeGVsUmF0aW8gOiBkZWZhdWx0RHByO1xuICBjb25zdCByb3VuZGVkID0gTWF0aC5taW4oTWF0aC5tYXgoMSwgcm91bmQgPyBNYXRoLmZsb29yKGRwcikgOiBkcHIpLCBtYXhEcHIpO1xuICByZXR1cm4gcm91bmRlZDtcbn1cblxuZXhwb3J0IHsgZ2V0RGV2aWNlUGl4ZWxSYXRpbywgdXNlRGV2aWNlUGl4ZWxSYXRpbyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubW9kdWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlRGV2aWNlUGl4ZWxSYXRpbyIsIm9wdGlvbnMiLCJkcHIiLCJnZXREZXZpY2VQaXhlbFJhdGlvIiwiY3VycmVudERwciIsInNldEN1cnJlbnREcHIiLCJkZWZhdWx0RHByIiwibWF4RHByIiwicm91bmQiLCJjYW5MaXN0ZW4iLCJ3aW5kb3ciLCJ1cGRhdGVEcHIiLCJtZWRpYU1hdGNoZXIiLCJtYXRjaE1lZGlhIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFkZExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiaGFzRHByUHJvcCIsImRldmljZVBpeGVsUmF0aW8iLCJyb3VuZGVkIiwiTWF0aCIsIm1pbiIsIm1heCIsImZsb29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-device-pixel-ratio/dist/index.module.js\n");

/***/ })

};
;